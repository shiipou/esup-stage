version: '3'

services:
  app:
    # Using a Dockerfile is optional, but included for completeness.
    build:
      context: .
      dockerfile: Dockerfile
      # [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
      args:
        VARIANT: "15"
        INSTALL_MAVEN: "true"
        INSTALL_GRADLE: "true"
        INSTALL_NODE: "false"
    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock
    environment:
      POSTGRES_HOST: "db:5432"
      POSTGRES_DB: "esupstage"
      POSTGRES_USER: "esupstage"
      POSTGRES_PASSWORD: "esupstage"

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    user: vscode

  # You can include other services not opened by VS Code as well
  db:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: "esupstage"
      POSTGRES_PASSWORD: esupstage
      POSTGRES_DB: "esupstage"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

    # As in the "app" service, use "forwardPorts" in **devcontainer.json** to forward an app port locally.